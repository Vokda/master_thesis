#simple ann that will learn the mnist 
name: "demo convolutional"
layer
{
	name: "test"
	type: "Data"
	data_param
	{
#		all data should be in the data directory in its own subdirectory
#		e.g.: project/data/data_set/
		source: "conv_test"
#		size of batch
		batch_size: 1
	}
	top: "data"
	top: "label"
}
#convolution
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 3
	kernel_size: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer
{
	name: "fc"
	type: "InnerProduct"
	inner_product_param
	{
		num_output: 10
		weight_filler 
		{
			type: "xavier"
		}
		bias_filler 
		{
			type: "constant"
		}
	}
	top: "ip1"
	bottom: "pool1"
}

#layer 
#{
#  name: "relu1"
#  type: "ReLU"
#  bottom: "ip1"
#  top: "ip1"
#}

layer
{
	name: "loss"
	type: "SoftmaxWithLoss"
	bottom: "ip1"
	bottom: "label"
}
